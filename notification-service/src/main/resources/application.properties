spring.application.name=notification-service
server.port=9099
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
management.endpoints.web.exposure.include=*
management.info.env.enabled=true
management.endpoint.shutdown.enabled=true

# Enable Spring Cloud Function Web adapter
spring.cloud.function.web.export.enabled=true

# Function web configuration
spring.cloud.function.web.path=/functions
spring.cloud.function.web.export.function-definitions=testing,testingPost

# rabbit mq configuration
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

# apache kafka
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.function.definition=orderEventReceiver

#spring cloud stream configuration
spring.cloud.stream.bindings.orderEventReceiver-in-0.destination=order.created
spring.cloud.stream.bindings.orderEventReceiver-in-0.content-type=application/json
spring.cloud.stream.bindings.orderEventReceiver-in-0.group=${spring.application.name}

# send acknowledgement back to order service the definition is same so we won't need to add streamBridge over here
spring.cloud.stream.bindings.orderEventReceiver-out-0.destination=order.ack
spring.cloud.stream.bindings.orderEventReceiver-out-0.content-type=application/json
spring.cloud.stream.bindings.orderEventReceiver-out-0.group=${spring.application.name}